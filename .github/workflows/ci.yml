name: "CI"

on: [push, pull_request]

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  USERNAME: ${{ github.actor }}
  JAVA_TOOL_OPTIONS: -Xmx5120m
  GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2 -Dkotlin.incremental=false -Dkotlin.compiler.execution.strategy=in-process

jobs:

  validation:
    # Skip if head commit contains 'skip ci'
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    name: "Validation"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Gradle Wrapper validation
        uses: gradle/wrapper-validation-action@v1

  dependencyAnalysis:
    # Skip if tags
    if: startsWith(github.ref , 'refs/tags/') != true
    name: "Dependency Analysis"
    runs-on: ubuntu-latest
    needs: validation

    steps:
      - uses: actions/checkout@v2

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Cache Gradle
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Generates advice from Dependency-analysis Gradle task
        run: ./gradlew -S buildHealth

      - name: Upload advice
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: dependency-advice
          path: ./build/reports/dependency-analysis/advice-holistic-pretty.json

  checkDebugBuild:
    # Skip if tags
    if: startsWith(github.ref , 'refs/tags/') != true
    name: "Check Debug Build"
    runs-on: ubuntu-latest
    needs: dependencyAnalysis

    steps:
      - uses: actions/checkout@v2

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Cache Gradle
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Check
        run: ./gradlew -S check

      - name: Build App Debug
        run: ./gradlew -S :android:assembleDebug

      - name: Upload App Debug
        uses: actions/upload-artifact@v2
        with:
          name: android-debug.apk
          path: ./android/build/outputs/apk/debug/android-debug.apk
